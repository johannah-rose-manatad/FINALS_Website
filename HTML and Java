<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Supabase JS To-Do List</title>
    <link rel="stylesheet" href="styles.css">
    <script src="https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2"></script>
</head>
<body>
    <header>
        <nav>
            <h1>Supabase To-Do List</h1>
        </nav>
        <div id="account-section" style="display:none;">
            <p id="account-username"></p>
            <button onclick="logout()">Log Out</button>
        </div>
    </header>
 
    <main>
        <div id="signup" class="container">
            <h2>Sign Up</h2>
            <div class="input-container">
                <input id="signup-name" type="text" placeholder="Name" required>
                <input id="signup-password" type="password" placeholder="Password" required>
                <button onclick="signUp()">Sign Up</button>
                <button onclick="showLogin()">Go to Login</button>
            </div>
        </div>
 
        <div id="login" class="container" style="display:none;">
            <h2>Login</h2>
            <div class="input-container">
                <input id="login-username" type="text" placeholder="Username">
                <input id="login-password" type="password" placeholder="Password">
                <button onclick="login()">Login</button>
                <button onclick="showSignUp()">Go to Sign Up</button>
            </div>
        </div>
 
        <div id="task-section" class="container" style="display:none;">
            <h2>Task List</h2>
            <div class="input-container">
                <input id="task-input" type="text" placeholder="Task Description">
                <input id="task-time" type="time" placeholder="Time">
                <input id="task-date" type="date" placeholder="Date">
                <button id="add-task-btn" onclick="addTask()">Add Task</button>
            </div>
            <div class="task-list-container" id="task-list">
            
            </div>
        </div>
    </main>
 
    <footer>
        <p>&copy; Webdev Project</p>
    </footer>
 
    <script>
        const { createClient } = supabase;
 
        const supabase_url = "https://mjmuojqflkqgtfujgtyd.supabase.co";
        const supabase_key = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1qbXVvanFmbGtxZ3RmdWpndHlkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MTE5NTI3MjIsImV4cCI6MjAyNzUyODcyMn0.LHFk7aVgRGw5nTWZKHqt-30gkiIqVdR8__yXLknUs7U";
        const connection = createClient(supabase_url, supabase_key);
 
        function showSignUp() {
            document.getElementById("login").style.display = 'none';
            document.getElementById("signup").style.display = 'block';
        }
 
        function showLogin() {
            document.getElementById("signup").style.display = 'none';
            document.getElementById("login").style.display = 'block';
        }
 
        async function signUp() {
            const name = document.getElementById("signup-name").value;
            const password = document.getElementById("signup-password").value;
 
            if (!name.trim() || !password.trim()) {
                alert("Please fill out all fields.");
                return;
            }
 
            const { data, error } = await connection
                .from('Checklist')
                .insert([{ Name: name, password: password }], { returning: 'minimal' });
 
            if (error) {
                console.error('Error:', error);
                alert('Failed to sign up.');
            } else {
                console.log('User signed up successfully:', data);
                alert('Sign up successful!');
                showLogin();  
            }
        }
 
        async function login() {
            const username = document.getElementById("login-username").value;
            const password = document.getElementById("login-password").value;
 
            const { data, error } = await connection
                .from('Checklist')
                .select('*')
                .eq('Name', username)
                .eq('password', password);
 
            if (error) {
                console.error('Error:', error);
                alert('Login failed');
                return;
            }
 
            if (data.length > 0) {
                document.getElementById("login").style.display = 'none';
                document.getElementById("signup").style.display = 'none';
                document.getElementById("task-section").style.display = 'block';
                document.getElementById("account-section").style.display = 'block';
                document.getElementById("account-username").textContent = `Hello, ${username}`;
                fetchTasks(username);
            } else {
                alert("Invalid username or password.");
            }
        }
 
        async function fetchTasks(username) {
    const { data, error } = await connection
        .from('Checklist')
        .select('*')
        .eq('Name', username);
 
    if (error) {
        console.error('Error:', error);
        return;
    }
 
    const taskList = document.getElementById('task-list');
    taskList.innerHTML = ''; 
 
    data.forEach(task => {
        if (task.datetask && task.time) {
            const listItem = document.createElement('div');
            listItem.classList.add('task-card');
            listItem.dataset.taskId = task.id;
 
            const taskInfo = document.createElement('div');
            taskInfo.classList.add('task-info');
            taskInfo.innerHTML = `<span>${task.task}</span><span>Time: ${task.time}</span><span>Deadline: ${task.datetask}</span>`;
 
            const checkbox = document.createElement('input');
            checkbox.type = 'checkbox';
            checkbox.classList.add('completed-checkbox');
            checkbox.checked = task.completed;
 
            const deleteButton = document.createElement('button');
            deleteButton.classList.add('delete-btn');
            deleteButton.textContent = 'Delete';
            deleteButton.onclick = () => deleteTask(task.id);
 
            listItem.appendChild(taskInfo);
            listItem.appendChild(checkbox);
            listItem.appendChild(deleteButton);
 
            taskList.appendChild(listItem);
        }
    });
}
 
        async function addTask() {
    const username = document.getElementById("account-username").textContent.replace('Hello, ', '');
    const taskInput = document.getElementById("task-input").value;
    const taskTime = document.getElementById("task-time").value;
    const taskDate = document.getElementById("task-date").value;
    const password = document.getElementById("login-password").value;
 
    if (!taskInput.trim() || !taskDate.trim() || !taskTime.trim()) {
        alert("Please fill out all fields.");
        return;
    }
 
    const { data, error } = await connection
        .from('Checklist')
        .insert([{ Name: username, task: taskInput, datetask: taskDate, password: password, time: taskTime }], { returning: 'minimal' });
 
    if (error) {
        console.error('Error:', error);
        alert('Failed to add task.');
    } else {
        console.log('Task added successfully:', data);
        fetchTasks(username);
    }
}
 
 
        async function deleteTask(taskId) {
            const { data, error } = await connection
                .from('Checklist')
                .delete()
                .eq('id', taskId);
 
            if (error) {
                console.error('Error:', error);
            } else {
                console.log('Task deleted:', data);
                const username = document.getElementById("account-username").textContent.replace('Hello, ', '');
                fetchTasks(username);
            }
        }
 
        function logout() {
            document.getElementById("account-username").textContent = '';
            document.getElementById("task-section").style.display = 'none';
            document.getElementById("account-section").style.display = 'none';
            showLogin();
        }
    </script>
</body>
</html>
